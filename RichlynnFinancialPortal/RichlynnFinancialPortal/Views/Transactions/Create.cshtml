@model RichlynnFinancialPortal.Models.Transaction


@{
    ViewBag.Title = "Create";
}

    <div class="container-fluid width-60">
        @using (Html.BeginForm("Create", "Transactions", FormMethod.Post, new { id = "createTransactionForm", @class = "colorWhite width-100" }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal width-100">
            <h4>Transaction</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.AccountId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Budget Item", new { @class = "ml-3" })
                <div class="col-md-10">
                    @Html.DropDownList("BudgetItemId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BudgetItemId, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.Label("Owner", new { @class = "ml-3" })
                <div class="col-md-10">
                    @Html.DropDownList("OwnerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedString, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Transaction Type", new { @class = "ml-3" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.TransactionType, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDeleted)
                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 displayFlex flexStart">
                    <input type="submit" value="Create" class="btn backgroundWhite width-20" id="transactionsCreateButton" />
                    @Html.ActionLink("Back to List", "Index", "Transactions", new { @class = "btn backgroundGoldenRod width-20 ml-2" })
                </div>

            </div>
        </div>
        }


    </div>
